data_monthly$Month = factor(data_monthly$Month)
data_monthly$Date = as.Date(data_monthly$Date)
data_monthly %>% head
train1 = subset(data_monthly, Year<2008,
select=c(Year, Month, Date, Domestic, International, Total))
test1 = subset(data_monthly, Year>=2008 & Year<2009,
select=c(Year, Month, Domestic, International, Total))
train2_prev = subset(data_monthly, Year>=2018 & Year<2019,
select=c(Year, Month, Date, Domestic, International, Total))
train2 = train2_prev[10:12,]
test2 = subset(data_monthly, Year>=2019,
select=c(Year, Month, Date, Domestic, International, Total))
train3 = subset(data_monthly, Year<2020,
select=c(Year, Month, Date, Domestic, International, Total))
test3 = subset(data_monthly, Year>=2020 & Year<2021,
select=c(Year, Month, Date, Domestic, International, Total))
M0S1 = lm(Total ~ 1, data = train1) #S1 stands for Scenario 1
summary(M0S1)
train1$M0 = M0S1$fitted.values
train1 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
scale_x_date(date_labels = "%Y-%m-%d")
M0S2 = lm(Total ~ 1, data = train2) #S2 stands for Scenario 2
summary(M0S2)
train2$M0 = M0S2$fitted.values
train2 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
scale_x_date(date_labels = "%Y-%m-%d")
M0S3 = lm(Total ~ 1, data = train3) #S3 stands for Scenario 3
summary(M0S3)
train3$M0 = M0S3$fitted.values
train3 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
scale_x_date(date_labels = "%Y-%m-%d")
dim(train1)
train1 = train1 %>% mutate(Trend = 1:63) #let's capture trend
M1S1 = lm(Total ~ Trend, data = train1)
summary(M1S1)
train1$M1 = M1S1$fitted.values
train1 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
scale_x_date(date_labels = "%Y-%m-%d")
dim(train2)
train2 = train2 %>% mutate(Trend = 1:3) #let's capture trend
M1S2 = lm(Total ~ Trend, data = train2)
summary(M1S2)
train2$M1 = M1S2$fitted.values
train2 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
scale_x_date(date_labels = "%Y-%m-%d")
dim(train3)
train3 = train3 %>% mutate(Trend = 1:207) #let's capture trend
M1S3 = lm(Total ~ Trend, data = train3)
summary(M1S3)
train3$M1 = M1S3$fitted.values
train3 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
scale_x_date(date_labels = "%Y-%m-%d")
head(train1)
train1$JAN = 0
train1$JAN[train1$Month=="1"] = 1
train1$FEB = 0
train1$FEB[train1$Month=="2"] = 1
train1$MAR = 0
train1$MAR[train1$Month=="3"] = 1
train1$APR = 0
train1$APR[train1$Month=="4"] = 1
train1$MAY = 0
train1$MAY[train1$Month=="5"] = 1
train1$JUN = 0
train1$JUN[train1$Month=="6"] = 1
train1$JUL = 0
train1$JUL[train1$Month=="7"] = 1
train1$AUG = 0
train1$AUG[train1$Month=="8"] = 1
train1$SEP = 0
train1$SEP[train1$Month=="9"] = 1
train1$OCT = 0
train1$OCT[train1$Month=="10"] = 1
train1$NOV = 0
train1$NOV[train1$Month=="11"] = 1
train1$DEC = 0
train1$DEC[train1$Month=="12"] = 1
head(train1)
train1 %>% group_by(Month) %>% summarise(mean(Total))
M2 = lm(Total ~ JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train1) #to include intercept one month should not be included
summary(M2)
train1$M2 = M2$fitted.values
train1 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
geom_line(aes(x = Date, y = M2), col = "green") +
scale_x_date(date_labels = "%Y-%m-%d")
head(train2)
head(train2)
train2$JAN = 0
train2$JAN[train1$Month=="1"] = 1
train2$FEB = 0
train2$FEB[train1$Month=="2"] = 1
train2$MAR = 0
train2$MAR[train1$Month=="3"] = 1
train2APR = 0
train2$APR[train1$Month=="4"] = 1
train2$MAY = 0
train2$MAY[train1$Month=="5"] = 1
train2$JUN = 0
train2$JUN[train1$Month=="6"] = 1
train2$JUL = 0
train2$JUL[train1$Month=="7"] = 1
train2$AUG = 0
train2$AUG[train1$Month=="8"] = 1
train2$SEP = 0
train2$SEP[train1$Month=="9"] = 1
train2$OCT = 0
train2$OCT[train1$Month=="10"] = 1
train2$NOV = 0
train2$NOV[train1$Month=="11"] = 1
train2$DEC = 0
train2$DEC[train1$Month=="12"] = 1
head(train2)
train2 %>% group_by(Month) %>% summarise(mean(Total))
M2S2 = lm(Total ~ JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train2) #to include intercept one month should not be included
summary(M2S2)
train2$M2 = M2S2$fitted.values
train2 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
geom_line(aes(x = Date, y = M2), col = "green") +
scale_x_date(date_labels = "%Y-%m-%d")
train2 %>% group_by(Month) %>% summarise(mean(Total))
M2S2 = lm(Total ~ JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train2) #to include intercept one month should not be included
M2S2 = lm(Total ~ JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train2) #to include intercept one month should not be included
head(train2)
train2$JAN = 0
train2$JAN[train1$Month=="1"] = 1
train2$FEB = 0
train2$FEB[train1$Month=="2"] = 1
train2$MAR = 0
train2$MAR[train1$Month=="3"] = 1
train2$APR = 0
train2$APR[train1$Month=="4"] = 1
train2$MAY = 0
train2$MAY[train1$Month=="5"] = 1
train2$JUN = 0
train2$JUN[train1$Month=="6"] = 1
train2$JUL = 0
train2$JUL[train1$Month=="7"] = 1
train2$AUG = 0
train2$AUG[train1$Month=="8"] = 1
train2$SEP = 0
train2$SEP[train1$Month=="9"] = 1
train2$OCT = 0
train2$OCT[train1$Month=="10"] = 1
train2$NOV = 0
train2$NOV[train1$Month=="11"] = 1
train2$DEC = 0
train2$DEC[train1$Month=="12"] = 1
head(train2)
train2 %>% group_by(Month) %>% summarise(mean(Total))
M2S2 = lm(Total ~ JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train2) #to include intercept one month should not be included
summary(M2S2)
train2$M2 = M2S2$fitted.values
train2 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
geom_line(aes(x = Date, y = M2), col = "green") +
scale_x_date(date_labels = "%Y-%m-%d")
train1 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
geom_line(aes(x = Date, y = M2), col = "green") +
scale_x_date(date_labels = "%Y-%m-%d")
head(train3)
train3$JAN = 0
train3$JAN[train1$Month=="1"] = 1
train3$FEB = 0
train3$FEB[train1$Month=="2"] = 1
train3$MAR = 0
train3$MAR[train1$Month=="3"] = 1
train3$APR = 0
train3$APR[train1$Month=="4"] = 1
train3$MAY = 0
train3$MAY[train1$Month=="5"] = 1
train3$JUN = 0
train3$JUN[train1$Month=="6"] = 1
train3$JUL = 0
train3$JUL[train1$Month=="7"] = 1
train3$AUG = 0
train3$AUG[train1$Month=="8"] = 1
train3$SEP = 0
train3$SEP[train1$Month=="9"] = 1
train3$OCT = 0
train3$OCT[train1$Month=="10"] = 1
train3$NOV = 0
train3$NOV[train1$Month=="11"] = 1
train3$DEC = 0
train3$DEC[train1$Month=="12"] = 1
head(train3)
train3 %>% group_by(Month) %>% summarise(mean(Total))
M2S3 = lm(Total ~ JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train3) #to include intercept one month should not be included
summary(M2S3)
train3$M2 = M2S3$fitted.values
train3 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
geom_line(aes(x = Date, y = M2), col = "green") +
scale_x_date(date_labels = "%Y-%m-%d")
RMSE_S1 = c(sqrt(mean(M0$residuals^2))*100,
sqrt(mean(M1$residuals^2))*100,
sqrt(mean(M2$residuals^2))*100,
sqrt(mean(M3$residuals^2))*100)
MAPE_S1 = c(mean(abs((train1$Total - train1$M0)/train1$Total),na.rm=TRUE)*100,
mean(abs((train1$Total - train1$M1)/train1$Total),na.rm=TRUE)*100,
mean(abs((train1$Total - train1$M2)/train1$Total),na.rm=TRUE)*100,
mean(abs((train1$Total - train1$M3)/train1$Total),na.rm=TRUE)*100)
RMSE_S2 = c(sqrt(mean(M0S2$residuals^2))*100,
sqrt(mean(M1S2$residuals^2))*100,
sqrt(mean(M2S2$residuals^2))*100,
sqrt(mean(M3S2$residuals^2))*100)
MAPE_S2 = c(mean(abs((train2$Total - train2$M0)/train2$Total),na.rm=TRUE)*100,
mean(abs((train2$Total - train2$M1)/train2$Total),na.rm=TRUE)*100,
mean(abs((train2$Total - train2$M2)/train2$Total),na.rm=TRUE)*100,
mean(abs((train2$Total - train2$M3)/train2$Total),na.rm=TRUE)*100)
RMSE_S3 = c(sqrt(mean(M0S3$residuals^2))*100,
sqrt(mean(M1S3$residuals^2))*100,
sqrt(mean(M2S3$residuals^2))*100,
sqrt(mean(M3S3$residuals^2))*100)
MAPE_S3 = c(mean(abs((train3$Total - train3$M0)/train3$Total),na.rm=TRUE)*100,
mean(abs((train3$Total - train3$M1)/train3$Total),na.rm=TRUE)*100,
mean(abs((train3$Total - train3$M2)/train3$Total),na.rm=TRUE)*100,
mean(abs((train3$Total - train3$M3)/train3$Total),na.rm=TRUE)*100)
M3S3 = lm(Total ~ Trend + JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train1)
summary(M3S3)
train1$M3 = M3S3$fitted.values
train1 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
geom_line(aes(x = Date, y = M2), col = "green") +
geom_line(aes(x = Date, y = M3), col = "orange") +
scale_x_date(date_labels = "%Y-%m-%d")
M3S1 = lm(Total ~ Trend + JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train1)
summary(M3S1)
train1$M3 = M3S1$fitted.values
train1 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
geom_line(aes(x = Date, y = M2), col = "green") +
geom_line(aes(x = Date, y = M3), col = "orange") +
scale_x_date(date_labels = "%Y-%m-%d")
M3S2 = lm(Total ~ Trend + JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train1)
summary(M3S2)
train2$M3 = M3S2$fitted.values
train2 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
geom_line(aes(x = Date, y = M2), col = "green") +
geom_line(aes(x = Date, y = M3), col = "orange") +
scale_x_date(date_labels = "%Y-%m-%d")
M3S2 = lm(Total ~ Trend + JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train1)
summary(M3S2)
train2$M3 = M3S2$fitted.values
M3S2 = lm(Total ~ Trend + JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train2)
summary(M3S2)
train2$M3 = M3S2$fitted.values
train2 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
geom_line(aes(x = Date, y = M2), col = "green") +
geom_line(aes(x = Date, y = M3), col = "orange") +
scale_x_date(date_labels = "%Y-%m-%d")
M3S3 = lm(Total ~ Trend + JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train3)
summary(M3S3)
train3$M3 = M3S3$fitted.values
train3 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
geom_line(aes(x = Date, y = M2), col = "green") +
geom_line(aes(x = Date, y = M3), col = "orange") +
scale_x_date(date_labels = "%Y-%m-%d")
RMSE_S1 = c(sqrt(mean(M0$residuals^2))*100,
sqrt(mean(M1$residuals^2))*100,
sqrt(mean(M2$residuals^2))*100,
sqrt(mean(M3$residuals^2))*100)
MAPE_S1 = c(mean(abs((train1$Total - train1$M0)/train1$Total),na.rm=TRUE)*100,
mean(abs((train1$Total - train1$M1)/train1$Total),na.rm=TRUE)*100,
mean(abs((train1$Total - train1$M2)/train1$Total),na.rm=TRUE)*100,
mean(abs((train1$Total - train1$M3)/train1$Total),na.rm=TRUE)*100)
RMSE_S2 = c(sqrt(mean(M0S2$residuals^2))*100,
sqrt(mean(M1S2$residuals^2))*100,
sqrt(mean(M2S2$residuals^2))*100,
sqrt(mean(M3S2$residuals^2))*100)
MAPE_S2 = c(mean(abs((train2$Total - train2$M0)/train2$Total),na.rm=TRUE)*100,
mean(abs((train2$Total - train2$M1)/train2$Total),na.rm=TRUE)*100,
mean(abs((train2$Total - train2$M2)/train2$Total),na.rm=TRUE)*100,
mean(abs((train2$Total - train2$M3)/train2$Total),na.rm=TRUE)*100)
RMSE_S3 = c(sqrt(mean(M0S3$residuals^2))*100,
sqrt(mean(M1S3$residuals^2))*100,
sqrt(mean(M2S3$residuals^2))*100,
sqrt(mean(M3S3$residuals^2))*100)
MAPE_S3 = c(mean(abs((train3$Total - train3$M0)/train3$Total),na.rm=TRUE)*100,
mean(abs((train3$Total - train3$M1)/train3$Total),na.rm=TRUE)*100,
mean(abs((train3$Total - train3$M2)/train3$Total),na.rm=TRUE)*100,
mean(abs((train3$Total - train3$M3)/train3$Total),na.rm=TRUE)*100)
accuracy.table = data.frame(ModelID = ModelID, 'S1 RMSE' = RMSE_S1, 'S1 MAPE' = MAPE_S1,
'S2 RMSE' = RMSE_S2, 'S2 MAPE' = MAPE_S2,
'S3 RMSE' = RMSE_S3, 'S3 MAPE' = MAPE_S3)
# now create evaluation table
ModelID = paste("M",0:3,sep="")
accuracy.table = data.frame(ModelID = ModelID, 'S1 RMSE' = RMSE_S1, 'S1 MAPE' = MAPE_S1,
'S2 RMSE' = RMSE_S2, 'S2 MAPE' = MAPE_S2,
'S3 RMSE' = RMSE_S3, 'S3 MAPE' = MAPE_S3)
# sort model from most accurate to least accurate based on MAPE
accuracy.table %>%  arrange(MAPE_AVG)
# now create evaluation table
ModelID = paste("M",0:3,sep="")
accuracy.table = data.frame(ModelID = ModelID, 'S1 RMSE' = RMSE_S1, 'S1 MAPE' = MAPE_S1,
'S2 RMSE' = RMSE_S2, 'S2 MAPE' = MAPE_S2,
'S3 RMSE' = RMSE_S3, 'S3 MAPE' = MAPE_S3)
#Evaluation Metrics
RMSE_S1 = c(sqrt(mean(M0$residuals^2))*100,
sqrt(mean(M1$residuals^2))*100,
sqrt(mean(M2$residuals^2))*100,
sqrt(mean(M3$residuals^2))*100)
#Evaluation Metrics
RMSE_S1 = c(sqrt(mean(M0S1$residuals^2))*100,
sqrt(mean(M1S1$residuals^2))*100,
sqrt(mean(M2S1$residuals^2))*100,
sqrt(mean(M3S1$residuals^2))*100)
MAPE_S1 = c(mean(abs((train1$Total - train1$M0)/train1$Total),na.rm=TRUE)*100,
mean(abs((train1$Total - train1$M1)/train1$Total),na.rm=TRUE)*100,
mean(abs((train1$Total - train1$M2)/train1$Total),na.rm=TRUE)*100,
mean(abs((train1$Total - train1$M3)/train1$Total),na.rm=TRUE)*100)
accuracy.table = data.frame(ModelID = ModelID, 'S1 RMSE' = RMSE_S1, 'S1 MAPE' = MAPE_S1,
'S2 RMSE' = RMSE_S2, 'S2 MAPE' = MAPE_S2,
'S3 RMSE' = RMSE_S3, 'S3 MAPE' = MAPE_S3)
RMSE_S1 = c(sqrt(mean(M0S1$residuals^2))*100,
sqrt(mean(M1S1$residuals^2))*100,
sqrt(mean(M2S1$residuals^2))*100,
sqrt(mean(M3S1$residuals^2))*100)
MAPE_S1 = c(mean(abs((train1$Total - train1$M0)/train1$Total),na.rm=TRUE)*100,
mean(abs((train1$Total - train1$M1)/train1$Total),na.rm=TRUE)*100,
mean(abs((train1$Total - train1$M2)/train1$Total),na.rm=TRUE)*100,
mean(abs((train1$Total - train1$M3)/train1$Total),na.rm=TRUE)*100)
RMSE_S2 = c(sqrt(mean(M0S2$residuals^2))*100,
sqrt(mean(M1S2$residuals^2))*100,
sqrt(mean(M2S2$residu
#Evaluation Metrics
RMSE_S1 = c(sqrt(mean(M0S1$residuals^2))*100,
sqrt(mean(M1S1$residuals^2))*100,
sqrt(mean(M2S1$residuals^2))*100,
sqrt(mean(M3S1$residuals^2))*100)
RMSE_S2 = c(sqrt(mean(M0S2$residuals^2))*100,
sqrt(mean(M1S2$residuals^2))*100,
sqrt(mean(M2S2$residuals^2))*100,
sqrt(mean(M3S2$residuals^2))*100)
#Evaluation Metrics
RMSE_S2 = c(sqrt(mean(M0S1$residuals^2))*100,
sqrt(mean(M1S1$residuals^2))*100,
sqrt(mean(M2S1$residuals^2))*100,
sqrt(mean(M3S1$residuals^2))*100)
head(train1)
train1$JAN = 0
train1$JAN[train1$Month=="1"] = 1
train1$FEB = 0
train1$FEB[train1$Month=="2"] = 1
train1$MAR = 0
train1$MAR[train1$Month=="3"] = 1
train1$APR = 0
train1$APR[train1$Month=="4"] = 1
train1$MAY = 0
train1$MAY[train1$Month=="5"] = 1
train1$JUN = 0
train1$JUN[train1$Month=="6"] = 1
train1$JUL = 0
train1$JUL[train1$Month=="7"] = 1
train1$AUG = 0
train1$AUG[train1$Month=="8"] = 1
train1$SEP = 0
train1$SEP[train1$Month=="9"] = 1
train1$OCT = 0
train1$OCT[train1$Month=="10"] = 1
train1$NOV = 0
train1$NOV[train1$Month=="11"] = 1
train1$DEC = 0
train1$DEC[train1$Month=="12"] = 1
head(train1)
train1 %>% group_by(Month) %>% summarise(mean(Total))
M2S1 = lm(Total ~ JAN + FEB + MAR + APR + MAY + JUN + JUL + AUG + SEP + OCT + NOV,
data = train1) #to include intercept one month should not be included
summary(M2S1)
train1$M2 = M2S1$fitted.values
train1 %>% ggplot(aes(x = Date, y = Total))+
geom_line()+ theme_bw() +
geom_line(aes(x = Date, y = M0), col = "blue") +
geom_line(aes(x = Date, y = M1), col = "red") +
geom_line(aes(x = Date, y = M2), col = "green") +
scale_x_date(date_labels = "%Y-%m-%d")
#Evaluation Metrics
RMSE_S2 = c(sqrt(mean(M0S1$residuals^2))*100,
sqrt(mean(M1S1$residuals^2))*100,
sqrt(mean(M2S1$residuals^2))*100,
sqrt(mean(M3S1$residuals^2))*100)
accuracy.table = data.frame(ModelID = ModelID, 'S1 RMSE' = RMSE_S1, 'S1 MAPE' = MAPE_S1,
'S2 RMSE' = RMSE_S2, 'S2 MAPE' = MAPE_S2,
'S3 RMSE' = RMSE_S3, 'S3 MAPE' = MAPE_S3)
#Evaluation Metrics
RMSE_S1 = c(sqrt(mean(M0S1$residuals^2))*100,
sqrt(mean(M1S1$residuals^2))*100,
sqrt(mean(M2S1$residuals^2))*100,
sqrt(mean(M3S1$residuals^2))*100)
RMSE_S2 = c(sqrt(mean(M0S2$residuals^2))*100,
sqrt(mean(M1S2$residuals^2))*100,
sqrt(mean(M2S2$residuals^2))*100,
sqrt(mean(M3S2$residuals^2))*100)
accuracy.table = data.frame(ModelID = ModelID, 'S1 RMSE' = RMSE_S1, 'S1 MAPE' = MAPE_S1,
'S2 RMSE' = RMSE_S2, 'S2 MAPE' = MAPE_S2,
'S3 RMSE' = RMSE_S3, 'S3 MAPE' = MAPE_S3)
# sort model from most accurate to least accurate based on MAPE
accuracy.table %>%  arrange(MAPE_AVG)
accuracy.table = data.frame(ModelID = ModelID, 'S1 RMSE' = RMSE_S1, 'S1 MAPE' = MAPE_S1,
'S2 RMSE' = RMSE_S2, 'S2 MAPE' = MAPE_S2,
'S3 RMSE' = RMSE_S3, 'S3 MAPE' = MAPE_S3)
accuracy.table
accuracy.table = data.frame(ModelID = ModelID, 'S1 RMSE' = RMSE_S1, 'S1 MAPE' = MAPE_S1,
'S2 RMSE' = RMSE_S2, 'S2 MAPE' = MAPE_S2,
'S3 RMSE' = RMSE_S3, 'S3 MAPE' = MAPE_S3)
accuracy.table = data.frame(ModelID = ModelID, S1 MAPE' = MAPE_S1,
S2 MAPE' = MAPE_S2,
'S3 MAPE' = MAPE_S3)
accuracy.table = data.frame(ModelID = ModelID, 'S1 MAPE' = MAPE_S1,
'S2 MAPE' = MAPE_S2,
'S3 MAPE' = MAPE_S3)
accuracy.table = data.frame(ModelID = ModelID, 'S1 MAPE' = MAPE_S1,
'S2 MAPE' = MAPE_S2,
'S3 MAPE' = MAPE_S3)
accuracy.table$M0
accuracy.table
accuracy.table$ModelID=M0
accuracy.table$ModelID='M0'
accuracy.table$ModelID='M0'
print(accuracy.table$ModelID='M0')
accuracy.table$ModelID='M0'
avg(accuracy.table$ModelID='M0')
accuracy.table = data.frame(ModelID = ModelID, 'S1 MAPE' = MAPE_S1,
'S2 MAPE' = MAPE_S2,
'S3 MAPE' = MAPE_S3)
accuracy.table
as.matrix(accuracy.table)
accuracy.table = data.frame(ModelID = ModelID, 'S1 MAPE' = MAPE_S1,
'S2 MAPE' = MAPE_S2,
'S3 MAPE' = MAPE_S3)
mean(accuracy.table[ , 2])
mean(accuracy.table[ , 1])
mean(accuracy.table[ , 2])
mean(accuracy.table[ , 23)
mean(accuracy.table[ , 3)
mean(accuracy.table[ , 2])
mean(accuracy.table[ , 3])
mean(accuracy.table[ , 4])
mean(accuracy.table[ , 5])
mean(accuracy.table[ , 4])
mean(accuracy.table[ , 1])
accuracy.table = data.frame(ModelID = ModelID, 'S1 MAPE' = MAPE_S1,
'S2 MAPE' = MAPE_S2,
'S3 MAPE' = MAPE_S3)
accuracy.table
# now create evaluation table
accuracy.table = data.frame('S1 MAPE' = MAPE_S1,
'S2 MAPE' = MAPE_S2,
'S3 MAPE' = MAPE_S3)
at = as.matrx(accuracy.table)
at = as.matrix(accuracy.table)
MAPE_AVG = c(rowMeans(at))
MAPE_AVG
ModelID = paste("M",0:3,sep="")
accuracy.table = data.frame(ModelID = ModelID, 'S1 RMSE' = RMSE_S1, 'S1 MAPE' = MAPE_S1,
'S2 RMSE' = RMSE_S2, 'S2 MAPE' = MAPE_S2,
'S3 RMSE' = RMSE_S3, 'S3 MAPE' = MAPE_S3,
MAPE_AVG = MAPE_AVG)
# sort model from most accurate to least accurate based on MAPE
accuracy.table %>% arrange(MAPE_AVG)
