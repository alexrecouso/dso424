install.packages("tidycensus")
#install tidycensus library
#then load it
library(tidycensus)
install.packages("tidycensus")
#install tidycensus library
#then load it
library(tidycensus)
census_api_key(a8fabec98a12dc0d90b8393d1edee7848a76115a, overwrite=FALSE, install=FALSE)
census_api_key(key='a8fabec98a12dc0d90b8393d1edee7848a76115a', overwrite=FALSE, install=FALSE)
census_api_key(key='a8fabec98a12dc0d90b8393d1edee7848a76115a', install=TRUE)
load_variables(year = 2019, dataset = "acs1") %>% view()
library(readr)
load_variables(year = 2019, dataset = "acs1") %>% view()
library(dyplr)
library(dplyr)
library(dplyr)
load_variables(year = 2019, dataset = "acs1") %>% view()
load_variables(year = 2019, dataset = "acs1")
library(tidyverse)
install.packages("tidyverse")
#install tidycensus library
#then load it
library(tidycensus)
library(readr)
library(tidyverse)
census_api_key(key='a8fabec98a12dc0d90b8393d1edee7848a76115a', install=TRUE)
load_variables(year = 2019, dataset = "acs1")
load_variables(year = 2019, dataset = "acs1") %>%  view()
get_acs(geography = 'state', variables = 'B19013_001')
household_income = get_acs(geography = 'state', variables = 'B19013_001')
household_income %>% head
household_income %>% ggplot(aes(x = NAME, y = estimate)) +
geom_col()
household_income %>% filter(estimate>7000) %>% ggplot(aes(x = NAME, y = estimate)) +
geom_col()
household_income %>% filter(estimate>7000) %>% ggplot(aes(x = NAME, y = estimate)) +
geom_col()
household_income %>% filter(estimate>7000) %>% ggplot(aes(x = NAME, y = estimate)) +
geom_col()
household_income %>% filter(estimate>+7000) %>% ggplot(aes(x = NAME, y = estimate)) +
geom_col()
household_income %>% filter(estimate>=7000) %>% ggplot(aes(x = NAME, y = estimate)) +
geom_col()
household_income %>% filter(estimate >= 7000) %>% ggplot(aes(x = NAME, y = estimate)) +
geom_col()
household_income %>% ggplot(aes(x = NAME, y = estimate)) +
geom_col()
census_api_key(key='a8fabec98a12dc0d90b8393d1edee7848a76115a')
load_variables(year = 2019, dataset = "acs1") %>%  view()
household_income = get_acs(geography = 'state', variables = 'B19013_001')
household_income %>% head
household_income %>% ggplot(aes(x = NAME, y = estimate)) +
geom_col()
household_income %>% ggplot(aes(x = NAME, y = estimate)) +
geom_col()
household_income %>% filter(estimate > 7000) %>%  ggplot(aes(x = NAME, y = estimate)) +
geom_col()
household_income %>% filter(estimate > 7000) %>% ggplot(aes(x = NAME, y = estimate)) +
geom_col()
household_income = get_acs(geography = 'county', variables = 'B19013_001')
#install tidycensus library
#then load it
library(tidycensus)
library(readr)
library(tidyverse)
census_api_key(key='a8fabec98a12dc0d90b8393d1edee7848a76115a')
load_variables(year = 2019, dataset = "acs1") %>%  view()
household_income = get_acs(geography = 'state', variables = 'B19013_001')
household_income %>% head
household_income %>% filter(estimate > 7000) %>% ggplot(aes(x = NAME, y = estimate)) +
geom_col()
household_income = get_acs(geography = 'county', variables = 'B19013_001')
#Data Preparation:
#first, I downloaded data as .xls from the URL provided. I eliminated non-desired
#rows in MSExcel, and saved it as Passengers.xlsx to import it to RStudio
library(readxl)
setwd("~/Documents/GitHub/dso424/HW3")
#Data Preparation:
#first, I downloaded data as .xls from the URL provided. I eliminated non-desired
#rows in MSExcel, and saved it as Passengers.xlsx to import it to RStudio
#setwd("C:/Users/alexrecouso/Desktop") #set desired working directory
library(readxl)
data = read_xlsx('Passengers.xlsx') #load data
data %>% head
#Data Preparation:
#first, I downloaded data as .xls from the URL provided. I eliminated non-desired
#rows in MSExcel, and saved it as Passengers.xlsx to import it to RStudio
#setwd("C:/Users/alexrecouso/Desktop") #set desired working directory
library(readxl)
data = read_xlsx('Passengers.xlsx') #load data
data %>% head
head(data)
#let's transform columns DOMESTIC and INTERNATIONAL to numeric
data$DOMESTIC = data %>% select(DOMESTIC) %>% unlist %>%
str_replace_all(",", "") %>% as.numeric
